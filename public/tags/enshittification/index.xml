<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Enshittification on What is wrong with your dog?</title>
    <link>https://whatiswrongwithyourdog.netlify.app/tags/enshittification/</link>
    <description>Recent content in Enshittification on What is wrong with your dog?</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>This work is licensed under a Creative Commons Attribution-ShareAlike 4.0 International License.</copyright>
    <lastBuildDate>Sat, 25 Feb 2023 14:34:58 -0700</lastBuildDate><atom:link href="https://whatiswrongwithyourdog.netlify.app/tags/enshittification/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>The Enshittification of Raycast</title>
      <link>https://whatiswrongwithyourdog.netlify.app/posts/raycast/</link>
      <pubDate>Sat, 25 Feb 2023 14:34:58 -0700</pubDate>
      
      <guid>https://whatiswrongwithyourdog.netlify.app/posts/raycast/</guid>
      <description>I am not sure if he came up with the term but, Cory Doctorow has certainly popularised Enshittification as well as providing the a handy list of the steps companies go through as they enshitiffy themselves. I have been thinking of that process a lot this week as I have been looking at various new software releases - Fig, Warp and Raycast 1. These are all attempts to modernise a facet of computing often overlooked (terminals and application launching) as well as adding team and enterprise components to them.</description>
    </item>
    
  </channel>
</rss>
